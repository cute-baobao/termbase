// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define your database schema here
model User {
  id        String     @id @default(cuid())
  username  String
  email     String     @unique
  password  String
  role      Role       @default(USER) // 全局角色
  createdAt DateTime   @default(now())
  termbases Termbase[]
  members   Member[]
}

model Termbase {
  id         String   @id @default(cuid())
  name       String
  ownerId    String
  owner      User     @relation(fields: [ownerId], references: [id])
  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sourceLang Lang
  targetLang Lang
  terms      Term[]
  members    Member[]
}

model Term {
  id         String   @id @default(cuid())
  termbaseId String   @map("termbase_id")
  termbase   Termbase @relation(fields: [termbaseId], references: [id])
  sourceTerm String
  targetTerm String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Member {
  id         Int      @id @default(autoincrement())
  termbaseId String   @map("termbase_id")
  termbase   Termbase @relation(fields: [termbaseId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  bit        Int // 位掩码权限
  role       String // owner/editor/viewer，可选
  createdAt  DateTime @default(now())

  @@unique([userId, termbaseId])
}

enum Role {
  ADMIN
  USER
}

enum Lang {
  EN
  ZH
}
